{"title":"Redis实战之Redisson使用技巧详解","uid":"62f0380213af8188cf68f0ab26ba211b","slug":"backend/redisson","date":"2024-05-16T04:01:51.000Z","updated":"2024-06-13T03:11:03.261Z","comments":true,"path":"api/articles/backend/redisson.json","keywords":null,"cover":"https://a1.boltp.com/2024/06/13/666a58fa1f778.webp","content":"<h2 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h2><p>什么是 Redisson？来自于官网上的描述内容如下！</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Redisson 是一个在 Redis 的基础上实现的 Java 驻内存数据网格客户端（In-Memory Data Grid）。它不仅提供了一系列的 redis<br>常用数据结构命令服务，还提供了许多分布式服务，例如分布式锁、分布式对象、分布式集合、分布式远程服务、分布式调度任务服务等等。</p></blockquote>\n<p>相比于 Jedis、Lettuce 等基于 redis 命令封装的客户端，Redisson 提供的功能更加高端和抽象，逼格高！</p>\n<p>更多功能特性和开发文档说明，可用移步github进行获取，访问地址如下：</p>\n<p><a href=\"https://github.com/redisson/redisson/wiki/%E7%9B%AE%E5%BD%95\">redisson地址</a></p>\n<h2 id=\"基本使用\"><a href=\"#基本使用\" class=\"headerlink\" title=\"基本使用\"></a><strong>基本使用</strong></h2><p>跟过去一样，首先创建一个 maven 项目，添加<code>Redisson</code>依赖包。</p>\n<div class=\"language-xml\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">xml</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">dependency</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">groupId</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">org.redisson</span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">groupId</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">artifactId</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">redisson</span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">artifactId</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">  </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">version</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\">3.13.6</span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">version</span><span style=\"color: #89DDFF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">dependency</span><span style=\"color: #89DDFF\">&gt;</span></span></code></pre></div><p>单机环境下，简单样例如下！</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">public</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">static</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">void</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">main</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">[]</span><span style=\"color: #BABED8\"> args</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">Config</span><span style=\"color: #BABED8\"> config </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Config</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        config</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">useSingleServer</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">setConnectionMinimumIdleSize</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">5</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 设置最下空闲数</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">setConnectionPoolSize</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">10</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 设置连接池大小</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">setIdleConnectionTimeout</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F78C6C\">1000</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 设置空闲连接超时时间 单位为毫秒</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">setConnectTimeout</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">10</span><span style=\"color: #89DDFF\">*</span><span style=\"color: #F78C6C\">1000</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 设置连接超时时间 单位为毫秒</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">setAddress</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">redis://127.0.0.1:6379</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">                </span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">setDatabase</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">//获取客户端</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">RedissonClient</span><span style=\"color: #BABED8\"> redissonClient </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Redisson</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">create</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">config</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #C792EA\">RBucket</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> selfBucket </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> redissonClient</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getBucket</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">selfBucket</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        selfBucket</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">set</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">hello</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F78C6C\">3</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> TimeUnit</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">SECONDS</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        selfBucket</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">set</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">world</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">//获取所有的key</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        redissonClient</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getKeys</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">getKeys</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">forEach</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">key </span><span style=\"color: #C792EA\">-&gt;</span><span style=\"color: #BABED8\"> System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">key</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">//关闭客户端</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        redissonClient</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">shutdown</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>ps：创建 RedissonClient 对象实例的方式多钟多样，可以直接通过在代码中设置 Redis 服务的相关参数创建，也可以通过加载 JSON 格式、 YAML 格式或者 Spring XML 配置文件来创建，详细的参数配置可用移步上文提到的 Redisson 开发文档。</p></blockquote>\n<h3 id=\"String\"><a href=\"#String\" class=\"headerlink\" title=\"String\"></a>String</h3><p>Redisson 支持通过<code>RBucket</code>对象来操作字符串数据结构，通过<code>RBucket</code>实例可以设置<code>value</code>或设置<code>value</code>和有效期，简单样例如下！</p>\n<ol>\n<li>简单字符串操作</li>\n</ol>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//字符串操作</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">RBucket</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> rBucket </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> redissonClient</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getBucket</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">strKey</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 设置value和key的有效期</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">rBucket</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">set</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">张三</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">30</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> TimeUnit</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">SECONDS</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//rBucket.getAndDelete();  获取strKey的值并删除strKey这个key</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//rBucket.compareAndSet(&quot;张三&quot;,&quot;李四&quot;); 和cas想同先比较后设置</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//rBucket.setIfExists(&quot;hello1&quot;); 存在值就设置</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 通过key获取value</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//rBucket.isExists(); 判断当前桶是否有值</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// rBucket.delete(); 删除桶中数据</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">redissonClient</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getBucket</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">strKey</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">get</span><span style=\"color: #89DDFF\">());</span></span></code></pre></div><ol start=\"2\">\n<li>对象操作</li>\n</ol>\n<p>Redisson 支持将对象作为<code>value</code>存入<code>redis</code>，被存储的对象事先必须要实现序列化接口<code>Serializable</code>，否则会报错，简单样例如下！</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//字符串对象操作</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">RBucket</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">user</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> rBucket </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> redissonClient</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getBucket</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">strKey2</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">rBucket</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">set</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">user</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">setId</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">1001</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">setName</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">stone</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">redissonClient</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getBucket</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">strKey2</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">get</span><span style=\"color: #89DDFF\">());</span></span></code></pre></div><h2 id=\"hash\"><a href=\"#hash\" class=\"headerlink\" title=\"hash\"></a>hash</h2><p>Redisson 支持通过<code>RMap</code>对象来操作哈希数据结构，简单样例如下！</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">RMap</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">String</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> rMap </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> redissonClient</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getMap</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">mapkey</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">rMap</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">put</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">id</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">123</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">rMap</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">put</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">name</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">赵四</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">rMap</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">put</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">age</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">50</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//rMap.putIfAbsent() 如果不存在设置</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//rMap.size() 大小</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// rMap.clear();清空集合</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">rMap</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">expire</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">30</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> TimeUnit</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">SECONDS</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">redissonClient</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getMap</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">mapkey</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">get</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">name</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">));</span></span></code></pre></div><h2 id=\"list\"><a href=\"#list\" class=\"headerlink\" title=\"list\"></a>list</h2><div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">RList</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">user</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> rList </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> redissonClient</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getList</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">listkey</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">user student1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">user</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">student1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">setId</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">student1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">setName</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">张三</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">rList</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">add</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">student1</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">user student2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">user</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">student2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">setId</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">student2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">setName</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">李四</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">rList</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">add</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">student2</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//设置过期时间</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">rList</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">expire</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">30</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> TimeUnit</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">SECONDS</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// rList.subList(0,rList.size()).clear(); 获取子列表</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// rList.contains(student1);  判断是否存在student1</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// rList.indexOf(student2)   返回student2第一次出现的位置</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//  rList.lastIndexOf(student2)   返回student2最后一次出现的位置</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//rList.retainAll(Arrays.asList(student2)); 仅保留列表中存在的集合</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// rList.toArray() 转化成集合</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 通过key获取value</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">redissonClient</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getList</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">listkey</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">));</span></span></code></pre></div><h2 id=\"set\"><a href=\"#set\" class=\"headerlink\" title=\"set\"></a>set</h2><div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">RSet</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">user</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> rSet </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> redissonClient</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getSet</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">setkey</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">user student1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">user</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">student1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">setId</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">1L</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">student1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">setName</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">张三</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">rSet</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">add</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">student1</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">user student2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">user</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">student2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">setId</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">2L</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">student2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">setName</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">李四</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">rSet</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">add</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">student2</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">rSet</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">expire</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">30</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> TimeUnit</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">SECONDS</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// rSet.contains(student1);判断集合中是否包含指定的元素。</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// rSet.iterator();返回集合的迭代器</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// rSet.retainAll(Arrays.asList(student1, student2));仅保留集合中包含在指定集合中的元素，移除其他元素。</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">redissonClient</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getSet</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">setkey</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">));</span></span></code></pre></div><h2 id=\"zset\"><a href=\"#zset\" class=\"headerlink\" title=\"zset\"></a>zset</h2><p>Redisson 支持通过<code>RSortedSet</code>对象来操作有序集合数据结构，在使用对象来存储之前，实体对象必须先实现<code>Comparable</code>接口，并重写比较逻辑，否则会报错，简单样例如下！</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">RSortedSet</span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #C792EA\">user</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #BABED8\"> sortSetkey </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> redissonClient</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">get</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">sortSetkey</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">user student1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">user</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">student1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">setId</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">student1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">setName</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">张三</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">sortSetkey</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">add</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">student1</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">user student2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">user</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">student2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">setId</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">2</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">student2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">setName</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">李四</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">sortSetkey</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">add</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">student2</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// sortSetkey.iterator() 返回集合的迭代器</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">redissonClient</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getSortedSet</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">sortSetkey</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">));</span></span></code></pre></div><h2 id=\"添加监听\"><a href=\"#添加监听\" class=\"headerlink\" title=\"添加监听\"></a>添加监听</h2><p>以String为例来对redis的一些操作进行监听</p>\n<h2 id=\"布隆过滤器\"><a href=\"#布隆过滤器\" class=\"headerlink\" title=\"布隆过滤器\"></a>布隆过滤器</h2><p>布隆过滤器（Bloom Filter）是 1970 年由布隆提出的。它实际上是一个很长的二进制向量和一系列随机映射函数。</p>\n<p>布隆过滤器可以用于检索一个元素是否在一个集合中。它的优点是空间效率和查询时间都比一般的算法要好的多，缺点是有一定的误识别率和删除困难。</p>\n<p>Redisson 支持通过<code>RBloomFilter</code>对象来操作布隆过滤器，简单样例如下！</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">RBloomFilter</span><span style=\"color: #BABED8\"> rBloomFilter </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> redissonClient</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getBloomFilter</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">seqId</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 初始化预期插入的数据量为10000和期望误差率为0.01</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">rBloomFilter</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">tryInit</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">10000</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">0.01</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 插入部分数据</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">rBloomFilter</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">add</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">100</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">rBloomFilter</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">add</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">200</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">rBloomFilter</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">add</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">300</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//设置过期时间</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">rBloomFilter</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">expire</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">30</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> TimeUnit</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">SECONDS</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 判断是否存在</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">rBloomFilter</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">contains</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">300</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">rBloomFilter</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">contains</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">200</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">));</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">rBloomFilter</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">contains</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">999</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">));</span></span></code></pre></div><h2 id=\"分布式自增id\"><a href=\"#分布式自增id\" class=\"headerlink\" title=\"分布式自增id\"></a>分布式自增id</h2><p>ID 是数据的唯一标识，传统的做法是利用 UUID 和<a href=\"https://cloud.tencent.com/solution/database?from_column=20065&from=20065\">数据库</a>的自增 ID。</p>\n<p>但由于 UUID 是无序的，不能附带一些其他信息，因此实际作用有限。</p>\n<p>随着业务的发展，数据量会越来越大，需要对数据进行分表，甚至分库。分表后每个表的数据会按自己的节奏来自增，这样会造成 ID 冲突，因此这时就需要一个单独的机制来负责生成唯一 ID，redis 原生支持生成全局唯一的 ID。</p>\n<p>简单样例如下！</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">final</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> lockKey </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">aaaa</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//通过redis的自增获取序号</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">RAtomicLong</span><span style=\"color: #BABED8\"> atomicLong </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> redissonClient</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getAtomicLong</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">lockKey</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//设置过期时间</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">atomicLong</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">expire</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">30</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> TimeUnit</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">SECONDS</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">// 获取值</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">atomicLong</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">incrementAndGet</span><span style=\"color: #89DDFF\">());</span></span></code></pre></div><h2 id=\"分布式锁\"><a href=\"#分布式锁\" class=\"headerlink\" title=\"分布式锁\"></a>分布式锁</h2><p>Redisson 最大的亮点，也是使用最多的功能，就是提供了强大的<strong>分布式锁实现</strong>，特点是：使用简单、安全！</p>\n<p>简单使用样例如下！</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">Config</span><span style=\"color: #BABED8\"> config </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Config</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">config</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">useSingleServer</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">setAddress</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">redis://127.0.0.1:6379</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">setPassword</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">123456</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        </span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">setDatabase</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">RedissonClient</span><span style=\"color: #BABED8\"> redissonClient </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Redisson</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">create</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">config</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//获取锁对象实例</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">final</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> lockKey </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">abc</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">RLock</span><span style=\"color: #BABED8\"> rLock </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> redissonClient</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getLock</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">lockKey</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">try</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//尝试5秒内获取锁，如果获取到了，最长60秒自动释放</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">boolean</span><span style=\"color: #BABED8\"> res </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> rLock</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">tryLock</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">5L</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">60L</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> TimeUnit</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">SECONDS</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">res</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">//成功获得锁，在这里处理业务</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">获取锁成功</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">catch</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">Exception</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">获取锁失败，失败原因：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> e</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getMessage</span><span style=\"color: #89DDFF\">());</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">finally</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//无论如何, 最后都要解锁</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    rLock</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">unlock</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//关闭客户端</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">redissonClient</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">shutdown</span><span style=\"color: #89DDFF\">();</span></span></code></pre></div><p>以上是单机环境下的分布式锁实现逻辑，如果是集群环境下，应该如何处理呢？</p>\n<p>Redisson 提供<code>RedissonRedLock</code>操作类，也被称为<strong>红锁</strong>，实现原理简单的总结有以下几点：</p>\n<ul>\n<li>1.如果有多个 redis 集群的时候，当且仅当从大多数（N&#x2F;2+1，比如有3个 redis 节点，那么至少有2个节点）的 Redis 节点都取到锁，并且获取锁使用的总耗时小于锁失效时间时，锁才算获取成功</li>\n<li>2.如果获取失败，客户端会在所有的 Redis 实例上进行解锁操作</li>\n<li>3.集群环境下，redis <a href=\"https://cloud.tencent.com/act/pro/promotion-cvm?from_column=20065&from=20065\">服务器</a>直接不存在任何复制或者其他隐含的分布式协调机制，否则会存在实效的可能</li>\n</ul>\n<p><code>RedissonRedLock</code>简单使用样例如下！</p>\n<div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">Config</span><span style=\"color: #BABED8\"> config1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Config</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">config1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">useSingleServer</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">setAddress</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">redis://192.168.3.111:6379</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">setPassword</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">a123456</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">setDatabase</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">RedissonClient</span><span style=\"color: #BABED8\"> redissonClient1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Redisson</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">create</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">config1</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">Config</span><span style=\"color: #BABED8\"> config2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Config</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">config2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">useSingleServer</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">setAddress</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">redis://192.168.3.112:6379</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">setPassword</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">a123456</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">setDatabase</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">RedissonClient</span><span style=\"color: #BABED8\"> redissonClient2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Redisson</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">create</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">config2</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">Config</span><span style=\"color: #BABED8\"> config3 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Config</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">config3</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">useSingleServer</span><span style=\"color: #89DDFF\">().</span><span style=\"color: #82AAFF\">setAddress</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">redis://192.168.3.113:6379</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">setPassword</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">a123456</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">).</span><span style=\"color: #82AAFF\">setDatabase</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">0</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">RedissonClient</span><span style=\"color: #BABED8\"> redissonClient3 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Redisson</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">create</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">config3</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//获取多个 RLock 对象</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">final</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">String</span><span style=\"color: #BABED8\"> lockKey </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">abc</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">RLock</span><span style=\"color: #BABED8\"> lock1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> redissonClient1</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getLock</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">lockKey</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">RLock</span><span style=\"color: #BABED8\"> lock2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> redissonClient2</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getLock</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">lockKey</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">RLock</span><span style=\"color: #BABED8\"> lock3 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> redissonClient3</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getLock</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">lockKey</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #676E95; font-style: italic\">//根据多个 RLock 对象构建 RedissonRedLock （最核心的差别就在这里）</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">RedissonRedLock</span><span style=\"color: #BABED8\"> redLock </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">RedissonRedLock</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">lock1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> lock2</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> lock3</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">try</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//尝试5秒内获取锁，如果获取到了，最长60秒自动释放</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #C792EA\">boolean</span><span style=\"color: #BABED8\"> res </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> redLock</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">tryLock</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">5L</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #F78C6C\">60L</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> TimeUnit</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">SECONDS</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">res</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">        </span><span style=\"color: #676E95; font-style: italic\">//成功获得锁，在这里处理业务</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">        System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">获取锁成功</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">catch</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">Exception</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">e</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    System</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #BABED8\">out</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">println</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">获取锁失败，失败原因：</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #BABED8\"> e</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">getMessage</span><span style=\"color: #89DDFF\">());</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">finally</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//无论如何, 最后都要解锁</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    redLock</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">unlock</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h2 id=\"集群模式\"><a href=\"#集群模式\" class=\"headerlink\" title=\"集群模式\"></a>集群模式</h2><div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">Config</span><span style=\"color: #BABED8\"> config </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Config</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">config</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">useClusterServers</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">setScanInterval</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #F78C6C\">2000</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #BABED8\"> </span><span style=\"color: #676E95; font-style: italic\">// 集群状态扫描间隔时间，单位是毫秒</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//可以用&quot;rediss://&quot;来启用SSL连接</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">addNodeAddress</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">redis://127.0.0.1:7000</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">redis://127.0.0.1:7001</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">addNodeAddress</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">redis://127.0.0.1:7002</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">RedissonClient</span><span style=\"color: #BABED8\"> redisson </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Redisson</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">create</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">config</span><span style=\"color: #89DDFF\">);</span></span></code></pre></div><h2 id=\"主从模式\"><a href=\"#主从模式\" class=\"headerlink\" title=\"主从模式\"></a>主从模式</h2><div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">Config</span><span style=\"color: #BABED8\"> config </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Config</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">config</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">useMasterSlaveServers</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//可以用&quot;rediss://&quot;来启用SSL连接</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">setMasterAddress</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">redis://127.0.0.1:6379</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">addSlaveAddress</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">redis://127.0.0.1:6389</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">redis://127.0.0.1:6332</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">redis://127.0.0.1:6419</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">addSlaveAddress</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">redis://127.0.0.1:6399</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">RedissonClient</span><span style=\"color: #BABED8\"> redisson </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Redisson</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">create</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">config</span><span style=\"color: #89DDFF\">);</span></span></code></pre></div><h2 id=\"哨兵模式\"><a href=\"#哨兵模式\" class=\"headerlink\" title=\"哨兵模式\"></a>哨兵模式</h2><div class=\"language-java\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">java</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">Config</span><span style=\"color: #BABED8\"> config </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF; font-style: italic\">new</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">Config</span><span style=\"color: #89DDFF\">();</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">config</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">useSentinelServers</span><span style=\"color: #89DDFF\">()</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">setMasterName</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">mymaster</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">    </span><span style=\"color: #676E95; font-style: italic\">//可以用&quot;rediss://&quot;来启用SSL连接</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">addSentinelAddress</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">127.0.0.1:26389</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">127.0.0.1:26379</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">addSentinelAddress</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">127.0.0.1:26319</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #C792EA\">RedissonClient</span><span style=\"color: #BABED8\"> redisson </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #BABED8\"> Redisson</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">create</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">config</span><span style=\"color: #89DDFF\">);</span></span></code></pre></div>","feature":true,"text":"摘要什么是 Redisson？来自于官网上的描述内容如下！ Redisson 是一个在 Redis 的基础上实现的 Java 驻内存数据网格客户端（In-Mem...","permalink":"/post/backend/redisson","photos":[],"count_time":{"symbolsCount":"9.3k","symbolsTime":"8 mins."},"categories":[{"name":"backend","slug":"backend","count":2,"path":"api/categories/backend.json"}],"tags":[{"name":"redis","slug":"redis","count":1,"path":"api/tags/redis.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%91%98%E8%A6%81\"><span class=\"toc-text\">摘要</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">基本使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#String\"><span class=\"toc-text\">String</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#hash\"><span class=\"toc-text\">hash</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#list\"><span class=\"toc-text\">list</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#set\"><span class=\"toc-text\">set</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#zset\"><span class=\"toc-text\">zset</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B7%BB%E5%8A%A0%E7%9B%91%E5%90%AC\"><span class=\"toc-text\">添加监听</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%83%E9%9A%86%E8%BF%87%E6%BB%A4%E5%99%A8\"><span class=\"toc-text\">布隆过滤器</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%86%E5%B8%83%E5%BC%8F%E8%87%AA%E5%A2%9Eid\"><span class=\"toc-text\">分布式自增id</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81\"><span class=\"toc-text\">分布式锁</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%9B%86%E7%BE%A4%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">集群模式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%BB%E4%BB%8E%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">主从模式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%93%A8%E5%85%B5%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">哨兵模式</span></a></li></ol>","author":{"name":"panther","slug":"blog-author","avatar":"https://files.superbed.cn/proxy/726e6e6a692035356d716a72756e7534797e743478797f78756934797577352a237c7b2f2b297e282c232d2f237f7f2f2a29227f297b287b287c782e292b2c2c7e28287e7c2c7834706a7d","link":"/","description":"一身转战三千里,一剑曾当百万师。","socials":{"github":{"icon":"iconfont icon-github","link":"https://github.com/panther125"},"twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"数据库优化第一步看懂explain","uid":"451ee4a035442e0633cafdb9c68dc333","slug":"arary/Explain","date":"2024-05-20T04:01:51.000Z","updated":"2024-07-06T08:20:32.534Z","comments":true,"path":"api/articles/arary/Explain.json","keywords":null,"cover":"https://p1.meituan.net/csc/a8a726107666a0fe991022b3a5b1311568538.jpg","text":"explain常用字段 type ：访问的类型 key ：实际使用到的索引，如果为NULL，则没有使用索引 ref ：显示索引的哪一列被使用了，如果可能的话，是...","permalink":"/post/arary/Explain","photos":[],"count_time":{"symbolsCount":"8.3k","symbolsTime":"8 mins."},"categories":[{"name":"mysql","slug":"mysql","count":1,"path":"api/categories/mysql.json"}],"tags":[{"name":"mysql","slug":"mysql","count":1,"path":"api/tags/mysql.json"}],"author":{"name":"panther","slug":"blog-author","avatar":"https://files.superbed.cn/proxy/726e6e6a692035356d716a72756e7534797e743478797f78756934797577352a237c7b2f2b297e282c232d2f237f7f2f2a29227f297b287b287c782e292b2c2c7e28287e7c2c7834706a7d","link":"/","description":"一身转战三千里,一剑曾当百万师。","socials":{"github":{"icon":"iconfont icon-github","link":"https://github.com/panther125"},"twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"项目实战之批量插入性能分析","uid":"568c8981e612913b5236501ef69a4929","slug":"backend/batchInsert","date":"2024-05-16T04:01:51.000Z","updated":"2024-05-31T08:32:50.353Z","comments":true,"path":"api/articles/backend/batchInsert.json","keywords":null,"cover":"https://p0.meituan.net/csc/b04a0f1eae9ad10f8af9425db55cac461195437.jpg","text":" 不是专业测试，时间的参考价值不大，但是常见的批量插入方法应该能帮到你。 模拟表sqlDROP TABLE IF EXISTS emp; CREATE TABL...","permalink":"/post/backend/batchInsert","photos":[],"count_time":{"symbolsCount":"4.9k","symbolsTime":"4 mins."},"categories":[{"name":"backend","slug":"backend","count":2,"path":"api/categories/backend.json"}],"tags":[{"name":"mybatis","slug":"mybatis","count":1,"path":"api/tags/mybatis.json"}],"author":{"name":"panther","slug":"blog-author","avatar":"https://files.superbed.cn/proxy/726e6e6a692035356d716a72756e7534797e743478797f78756934797577352a237c7b2f2b297e282c232d2f237f7f2f2a29227f297b287b287c782e292b2c2c7e28287e7c2c7834706a7d","link":"/","description":"一身转战三千里,一剑曾当百万师。","socials":{"github":{"icon":"iconfont icon-github","link":"https://github.com/panther125"},"twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}